{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\nexport default function configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middlewares = [thunkMiddleware];\n  var composeEnhancers = compose;\n\n  if (process.env.NODE_ENV === 'development') {\n    if ('__REDUX_DEVTOOLS_EXTENSION_COMPOSE__' in window) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n\n    var loggerMiddleware = createLogger();\n    middlewares.push(loggerMiddleware);\n  }\n\n  return createStore(rootReducer, initialState, composeEnhancers(applyMiddleware.apply(void 0, middlewares)));\n}","map":{"version":3,"sources":["/home/cesar/Escritorio/miloV2/milotestmorty/src/redux/store/configure-store.js"],"names":["createStore","applyMiddleware","compose","thunkMiddleware","createLogger","rootReducer","configureStore","initialState","middlewares","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","loggerMiddleware","push"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,eAAe,SAASC,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACxD,MAAMC,WAAW,GAAG,CAACL,eAAD,CAApB;AAEA,MAAIM,gBAAgB,GAAGP,OAAvB;;AAEA,MAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAI,0CAA0CC,MAA9C,EAAsD;AACpDJ,MAAAA,gBAAgB,GAAGI,MAAM,CAACC,oCAA1B;AACD;;AAED,QAAMC,gBAAgB,GAAGX,YAAY,EAArC;AACAI,IAAAA,WAAW,CAACQ,IAAZ,CAAiBD,gBAAjB;AACD;;AAED,SAAOf,WAAW,CAChBK,WADgB,EAEhBE,YAFgB,EAGhBE,gBAAgB,CAACR,eAAe,MAAf,SAAmBO,WAAnB,CAAD,CAHA,CAAlB;AAKD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from '../reducers'\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [thunkMiddleware]\n\n  let composeEnhancers = compose\n\n  if (process.env.NODE_ENV === 'development') {\n    if ('__REDUX_DEVTOOLS_EXTENSION_COMPOSE__' in window) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    }\n\n    const loggerMiddleware = createLogger()\n    middlewares.push(loggerMiddleware)\n  }\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}