{"ast":null,"code":"import { GET_PERSONAJES_REQUEST, GET_PERSONAJES_SUCCESS, GET_PERSONAJES_FAIL, SET_PERSONAJES, FILTER_PERSONAJE } from '../constants/page';\nexport function getPersonajes() {\n  return function (dispatch) {\n    dispatch({\n      type: GET_PERSONAJES_REQUEST\n    });\n    return fetch(\"https://rickandmortyapi.com/api/character/\").then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(\"\".concat(response.status, \": \").concat(response.statusText));\n    }).then(function (data) {\n      dispatch({\n        type: GET_PERSONAJES_SUCCESS\n      });\n      dispatch(setPersonajes(data));\n      dispatch(filterPersonajes());\n    }).catch(function (error) {\n      dispatch({\n        type: GET_PERSONAJES_FAIL,\n        payload: error.message\n      });\n    });\n  };\n}\nexport function filterPersonajes() {\n  var searchString = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return function (dispatch, getState) {\n    var displayedPersonajes = getState().page.personajes.filter(function (personaje) {\n      return personaje.name.toLowerCase().includes(searchString.toLowerCase());\n    });\n    dispatch({\n      type: FILTER_PERSONAJE,\n      payload: displayedPersonajes\n    });\n  };\n}","map":{"version":3,"sources":["/home/cesar/Escritorio/miloV2/milotestmorty/src/redux/actions/page.js"],"names":["GET_PERSONAJES_REQUEST","GET_PERSONAJES_SUCCESS","GET_PERSONAJES_FAIL","SET_PERSONAJES","FILTER_PERSONAJE","getPersonajes","dispatch","type","fetch","then","response","ok","json","Error","status","statusText","data","setPersonajes","filterPersonajes","catch","error","payload","message","searchString","getState","displayedPersonajes","page","personajes","filter","personaje","name","toLowerCase","includes"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,sBAFJ,EAGIC,mBAHJ,EAIIC,cAJJ,EAKIC,gBALJ,QAMS,mBANT;AASE,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIA,WAAOQ,KAAK,8CAAL,CACJC,IADI,CACC,UAAAC,QAAQ,EAAI;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AAED,YAAM,IAAIC,KAAJ,WAAaH,QAAQ,CAACI,MAAtB,eAAiCJ,QAAQ,CAACK,UAA1C,EAAN;AACD,KAPI,EAQJN,IARI,CAQC,UAAAO,IAAI,EAAI;AACZV,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN;AADC,OAAD,CAAR;AAGAK,MAAAA,QAAQ,CAACW,aAAa,CAACD,IAAD,CAAd,CAAR;AACAV,MAAAA,QAAQ,CAACY,gBAAgB,EAAjB,CAAR;AACD,KAdI,EAeJC,KAfI,CAeE,UAAAC,KAAK,EAAI;AACdd,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,mBADC;AAEPmB,QAAAA,OAAO,EAAED,KAAK,CAACE;AAFR,OAAD,CAAR;AAID,KApBI,CAAP;AAqBD,GA1BD;AA2BD;AAED,OAAO,SAASJ,gBAAT,GAA6C;AAAA,MAAnBK,YAAmB,uEAAJ,EAAI;AAClD,SAAO,UAACjB,QAAD,EAAWkB,QAAX,EAAwB;AAC7B,QAAMC,mBAAmB,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,UAAhB,CAA2BC,MAA3B,CAAkC,UAAAC,SAAS,EAAI;AACzE,aAAOA,SAAS,CAACC,IAAV,CAAeC,WAAf,GAA6BC,QAA7B,CAAsCT,YAAY,CAACQ,WAAb,EAAtC,CAAP;AACD,KAF2B,CAA5B;AAIAzB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,gBADC;AAEPiB,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GATD;AAUD","sourcesContent":["import {\n    GET_PERSONAJES_REQUEST,\n    GET_PERSONAJES_SUCCESS,\n    GET_PERSONAJES_FAIL,\n    SET_PERSONAJES,\n    FILTER_PERSONAJE\n  } from '../constants/page'\n\n  \n  export function getPersonajes() {\n    return dispatch => {\n      dispatch({\n        type: GET_PERSONAJES_REQUEST\n      })\n  \n      return fetch(`https://rickandmortyapi.com/api/character/`)\n        .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n  \n          throw new Error(`${response.status}: ${response.statusText}`)\n        })\n        .then(data => {\n          dispatch({\n            type: GET_PERSONAJES_SUCCESS\n          })\n          dispatch(setPersonajes(data))\n          dispatch(filterPersonajes())\n        })\n        .catch(error => {\n          dispatch({\n            type: GET_PERSONAJES_FAIL,\n            payload: error.message\n          })\n        })\n    }\n  }\n  \n  export function filterPersonajes(searchString = '') {\n    return (dispatch, getState) => {\n      const displayedPersonajes = getState().page.personajes.filter(personaje => {\n        return personaje.name.toLowerCase().includes(searchString.toLowerCase())\n      })\n  \n      dispatch({\n        type: FILTER_PERSONAJE,\n        payload: displayedPersonajes\n      })\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}